* Assembling a Path
** Idea 1:
*** Get all major structures
**** Fused rings
**** Isolated rings
**** Aliphatic Chains
**** Functional Groups
**** Remaining single atoms
**** Ignore hydrogen atoms!
*** Find number of neighbours.
*** Start with a group with smallest numbers of neighbours.


** Notes on Graph:
*** Maybe move to multiGraph when using minor systems (multiple edges)
*** Compute major/minor systems earlier.


** Counting Atoms:

*** Every carbon atom in a ring gets a counter. We need the positions and inverse lookup.
*** Once an atom has been used it is stored with its real counter in another list.
*** If it is not yet in that list then we get it from the original list.
*** Positions are actually computed with respect to an offset.
*** The offset is increased every time a non-carbon atom is used.
*** For carbon atoms offset is increased once a structure has been fully described.

Questions: Am I talking positions (i.e., element at position 5 in the ring or am I counting atoms only.)
c c c o c    O is 1 but at position 4.

** Compiling Path on Major system:

*** Start with largest Ring, If no Ring use longest chain.

*** Expand greedily into the direction of the most interesting substitution.

*** Then do a global position computation.


* Rich Structures

** Interface functionality
   Some of these will be empty, in particular for Atoms/Bonds
   1. Components 
      + atom: empty
      + bond: the atoms it connects
      + atomset: 
        - compute subsystems from that
        - compute interior bonds from that
   2. Contexts (or ComponentOf) 
      The superstructures in which this structure occurs as component.
      + atomset: compute supersystems from that
   3. External: external bonds
      + bond: empty
      + atom: all bonds
   4. Connections: Triples of 
      - type: bridge atom, shared bond, spiro atom, shared atom or connecting bond 
        + spiro atoms are atoms shared between rings. Spiro atoms between other
          Atom sets are called shared.
        + shared atoms are shared atoms between at least one none ring
        + bridge atoms are shared atoms inside fused rings (i.e., end points of
          shared bonds)
        + shared bond are bonds shared between two subrings in a fused ring
          structure
        + connecting bond is a bond connecting atoms or atomsets. 
      - connector: the element that actual establishes the connection. I.e. an
        atom or a bond, indicated by the name.
      - connected: the structure (atom or atom set) that is connected.
        + connecting bonds can have both atom or atom set as connected element.
        + all other connection types will only have atom sets as connected.
          
      - Note that there can be multiple versions for the same element,
        representing the layers.
        + bond: empty
        + atom: can only have connecting bond
        + atomset: can have all, it then depends on the type of atom sets which
          one.

* Walking structures
** Recursively walk
*** Start with molecule: walk molecule
*** Assemble path
*** Walk substructures
** Each structure should have a walk method and a walkStructure method
*** walkStructure walks over atoms of the structure (e.g. all atoms, the rim)
**** walkStructure does nothing for molecules.
*** walk calls walkStructure by default.
*** In case of Superset does setPath and then walks all substructures
**** Refactor note:
***** Eventually all we need is walk to get positions etc.
***** Move most of the stuff from StructuralAnalysis to RichMolecule
*** Visualise method per structure.
** For Refactoring:
*** Currently we are walking the molecule wrt. to weight only.
*** Eventually it should be walked with respect to neighbour positions.
*** For this it would be useful to have an explicit neighbour field of class components positions.
* Testing
** Structures we are interested in
*** Structures from the books
*** Simple ring structures
**** with OH substitution:
**** with other substitutions:
**** with O replacement:
**** with other replacement:
*** Multi ring structures
*** Complex fused rings: Sterane, US06358966-20020319-C00001
*** Inner rings: 
    asphaltenes, coronene, hexahelicene, corannulene,
    http://www.chemcomp.com/journal/depictor.htm
    Circulene, Ovalene

** We need image, mol, svg for all.
** Testing cycle:
*** image to mol for reimplementation
*** mol to simple cml for cmlSpeech
*** cml to svg for cdk-renderer
*** cml to annotated cml for cmlSpeech
** Some of the internet images:
*** Rings: 7.tif

* Naming
** Naming is done via IUPAC or Name
*** If no name, take IUPAC.
*** If neither, use short description.
** Eventually implement simple nameing for
*** Aliphatic chains:
**** Prefix (meth, eth, prop, but, pent, hex, etc.) Maybe up to 20.
**** Postfix an, en, yne, diene for single, double, triple bonds, two-double, etc.
*** Rings:
**** There's the problem cyclic aliphatic chains vs. aromatic cycles
**** We should at least be able to do some simple cyclic rings:
***** Benzene, Cyclo-X-ane, Pyridine

* Speech
** Atoms can be described
*** short and long
*** in context of an atom set
*** in context with direction, depending on the incoming connection.

* Refactoring notes [TEMPORARY]
